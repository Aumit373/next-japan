name: Lint + SonarQube + Build Image + Push Docker Image into DockerHub 

# on:
#   push:
#     branches: [main]

on:
  workflow_dispatch:

jobs:
# Setup, Lint and Build
  setup-lint-build:
        name: setup-lint-build
        runs-on: ubuntu-latest

        steps:
          - name: Checkout code
            uses: actions/checkout@v4
            with:
              fetch-depth: 0

          - name: Set up Node.js
            uses: actions/setup-node@v4
            with:
              node-version: 20

          - name: Install dependencies
            run: npm ci

          - name: Lint
            run: npm run lint

          - name: Build
            run: npm run build

# #Sonar Qube Scanning and Quality Gate
#   sonarqube:
#     name: SonarQube Scan
#     runs-on: ubuntu-latest
#     needs: setup-lint-build

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4
#         with:
#           fetch-depth: 0

#       - name: Show Sonar Project File
#         run: cat .sonar-project.properties

#       - name: SonarQube Scan
#         uses: sonarsource/sonarqube-scan-action@master
#         env:
#           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#           SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
#         with:
#           args: >
#             -Dsonar.projectKey=next-japan

#       - name: Quality Gate Check
#         uses: sonarsource/sonarqube-quality-gate-action@master
#         env:
#           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#           SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

# Set up Docker setup and Build Image
  Docker-setup-build:
    name: Docker setup and Build Image
    runs-on: ubuntu-latest
    # needs: setup-lint-build
    steps:
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3

        # Step 3: Log in to Docker Hub
        - name: Login to Docker Hub
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}

        # Step 4: Build and push image
        - name: Build and Push Docker Image
          uses: docker/build-push-action@v5
          with:
            context: .
            push: true
            tags: aumit373/next-japan:latest




#docker install
#docker setup and login
#image pull and make container

#use it for step 3
            # cd ~/next-japan
            # # Stop & remove old container
            # docker stop next-japan || true
            # docker rm next-japan || true
            # # Build & run new one
            # docker build -t next-japan-app .
            # docker run -d --name next-japan -p 3000:3000 next-japan-app
